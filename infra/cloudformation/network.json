{
  "Description": "Network",
  "Parameters": {
    "MyIP": {
      "Type": "String",
      "Default": "133.200.151.128/32"
    }
  },
  "Outputs": {
    "VPC": {
      "Description": "VPC",
      "Value": { "Ref": "VPC" },
      "Export": {
        "Name": "VPC"
      }
    },
    "PublicSubnetA": {
      "Description": "PublicSubnetA",
      "Value": { "Ref": "PublicSubnetA" },
      "Export": {
        "Name": "PublicSubnetA"
      }
    },
    "PublicSubnetC": {
      "Description": "PublicSubnetC",
      "Value": { "Ref": "PublicSubnetC" },
      "Export": {
        "Name": "PublicSubnetC"
      }
    },
    "PrivateSubnetA": {
      "Description": "PrivateSubnetA",
      "Value": { "Ref": "PrivateSubnetA" },
      "Export": {
        "Name": "PrivateSubnetA"
      }
    },
    "PrivateSubnetC": {
      "Description": "PrivateSubnetC",
      "Value": { "Ref": "PrivateSubnetC" },
      "Export": {
        "Name": "PrivateSubnetC"
      }
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.10.0.0/16",
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "Tags": [
          {
            "Key": "Name",
            "Value": "tVPC"
          }
        ]
      }
    },
    "PublicSubnetA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": "10.10.1.0/24",
        "AvailabilityZoneId": "apne1-az4",
        "Tags": [
          {
            "Key": "Name",
            "Value": "tPublicSubnet-1a"
          }
        ]
      }
    },
    "PublicSubnetC": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": "10.10.2.0/24",
        "AvailabilityZoneId": "apne1-az1",
        "Tags": [
          {
            "Key": "Name",
            "Value": "tPublicSubnet-1c"
          }
        ]
      }
    },
    "PrivateSubnetA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": "10.10.3.0/24",
        "AvailabilityZoneId": "apne1-az4",
        "Tags": [
          {
            "Key": "Name",
            "Value": "tPrivateSubnet-1a"
          }
        ]
      }
    },
    "PrivateSubnetC": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "CidrBlock": "10.10.4.0/24",
        "AvailabilityZoneId": "apne1-az1",
        "Tags": [
          {
            "Key": "Name",
            "Value": "tPrivateSubnet-1c"
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {}
    },
    "RouteTablePublicSubnet": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "RoutePublicInternetGateway": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteTablePublicSubnet"
        },
        "GatewayId": {
          "Ref": "InternetGateway"
        },
        "DestinationCidrBlock": "0.0.0.0/0"
      },
      "DependsOn": ["VPC"]
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "SubnetRouteTableAssociationPublicA": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetA"
        },
        "RouteTableId": {
          "Ref": "RouteTablePublicSubnet"
        }
      }
    },
    "SubnetRouteTableAssociationPublicC": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetC"
        },
        "RouteTableId": {
          "Ref": "RouteTablePublicSubnet"
        }
      }
    },
    "ALB": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Name": "tLoadBalancer",
        "Scheme": "internal",
        "SecurityGroups": [],
        "Subnets": [{ "Ref": "PublicSubnetA" }, { "Ref": "PublicSubnetC" }],
        "Tags": [
          {
            "Key": "Name",
            "Value": "tALB"
          }
        ]
      }
    }
  }
}
